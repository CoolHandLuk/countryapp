{"version":3,"sources":["Components/Heading/Heading.js","Components/Search/Search.js","Components/Filter/Filter.js","theme-context.js","Components/Menu/Menu.js","Components/CountryList/CountryList.js","Components/Country/Country.js","App.js","reportWebVitals.js","index.js"],"names":["Heading","isLightMode","setIsLightMode","className","style","textDecoration","to","onClick","class","Search","filteredData","setFilteredData","numberOfCountries","placeholder","onChange","e","target","value","toLowerCase","Filter","regions","setRegions","ThemeContext","React","createContext","color","background","Menu","useContext","CountryList","colorChange","setColorChange","setNumberOfCountries","handleNumberOfCountries","useState","countries","setCountries","useEffect","axios","get","then","res","responseCountries","data","filteredRegions","filter","country","region","filteredCountries","name","includes","length","map","numericCode","population","capital","flag","src","alt","Country","useParams","setCountry","chosenCountry","el","nativeName","subregion","topLevelDomain","currencies","languages","borders","border","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32a059ff.chunk.js","sourcesContent":["// import \"./Heading.css\";\r\nimport {Link} from 'react-router-dom';\r\nimport {useContext, useState} from 'react';\r\n\r\nconst Heading = ({isLightMode, setIsLightMode}) => {\r\n\r\n\r\nconst changeColor = ()=> {\r\n  setIsLightMode(!isLightMode)\r\n}\r\n\r\n  return (\r\n    <>\r\n      <div className=\"heading__wrapper\"   >\r\n        <Link style={{ textDecoration: 'none' }} to=\"/\">\r\n        <h2 className=\"heading__textleft\">Where in the World?! </h2> \r\n        </Link>\r\n        \r\n        <h2 className=\"heading__textright\" onClick={changeColor} >\r\n          {isLightMode ? <i className=\"fas fa-moon heading__icon\"></i> : <i class=\"fas fa-sun heading__icon\"></i>  }\r\n          \r\n          \r\n          {isLightMode ? \"Dark Mode\" : \"Light Mode\"} \r\n        </h2>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","// import \"./Search.css\";\r\nimport {useState} from 'react';\r\n\r\nconst Search = ({filteredData, setFilteredData, numberOfCountries}) => {\r\n\r\n\r\nconst handlerChange = (e)=> {\r\n  setFilteredData(e.target.value.toLowerCase())\r\n}\r\n\r\n  return (\r\n    <form className=\"form__wrapper\">\r\n      <i class=\"fa fa-search form__icon\"></i>\r\n      <input className=\"form__input\" placeholder={`Search details of ${numberOfCountries} countries`}  onChange={handlerChange}  />\r\n      \r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","// import './Filter.css'\r\n\r\nconst Filter = ({regions, setRegions}) => {\r\n\r\n  const statusHandler = (e)=> {\r\n    setRegions(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    \r\n    <select onChange={statusHandler} className=\"filter__wrapper\">\r\n        <option> All</option>\r\n        <option> Africa</option>\r\n        <option> Americas</option>\r\n        <option> Europe</option>\r\n        <option> Oceania</option>\r\n      </select>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nexport const themes = {\r\n    dark: {\r\n        color: \"white\",\r\n        background: \"black\"\r\n    },\r\n    light: {\r\n        color: \"black\",\r\n        background: \"white\",\r\n    }\r\n}\r\n\r\nconst ThemeContext = React.createContext(themes.dark);\r\n\r\nexport default ThemeContext;","import Search from \"../Search/Search\";\r\nimport {useContext, useState} from 'react';\r\nimport Filter from \"../Filter/Filter\";\r\nimport ThemeContext from '../../theme-context';\r\n// import \"./Menu.css\";\r\n\r\n\r\nconst Menu = ({filteredData, setFilteredData, regions, setRegions, numberOfCountries}) => {\r\n  const theme = useContext(ThemeContext)\r\n  return (\r\n    <>\r\n      <div className=\"menu__wrapper\">\r\n      {/* <div style={theme}> */}\r\n        <Search\r\n        filteredData={filteredData}\r\n        setFilteredData={setFilteredData}\r\n        numberOfCountries={numberOfCountries}\r\n         />\r\n        <Filter\r\n        regions={regions}\r\n        setRegions={setRegions}\r\n        />\r\n              \r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst CountryList = ({\r\n  colorChange, setColorChange, filteredData, handleNumberOfCountries,numberOfCountries, setNumberOfCountries, regions, setRegions })=>{\r\n  const [countries, setCountries] = useState([]);\r\n  useEffect(() => {\r\n    axios.get(`https://restcountries.eu/rest/v2/all`).then((res) => {\r\n      const responseCountries = res.data;\r\n      setCountries(responseCountries);\r\n    });\r\n  },[]);\r\n\r\n  /*  warunek do selecta */\r\n const filteredRegions = regions ==='All' ? countries : countries.filter((country)=>{\r\n   return country.region === regions ;\r\n })\r\n\r\n /* warunek do filtra search */\r\n  const filteredCountries = filteredData ? filteredRegions.filter((country)=>{\r\n    return country.name.toLowerCase().includes(filteredData)}) : filteredRegions;\r\n  \r\n\r\n    setNumberOfCountries(countries.length);\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"countries__wrapper\">\r\n        {filteredCountries && \r\n          filteredCountries.map((country) => {\r\n            const {\r\n              numericCode,\r\n              name,\r\n              population,\r\n              region,\r\n              capital,\r\n              flag\r\n            } = country;\r\n            return (\r\n              <>\r\n                \r\n                <div className=\"countries__entry\"  key={numericCode}>\r\n                    <Link to={`/country/${name}`}>\r\n                        <img className=\"countries__img\" src={flag} alt={name} />\r\n                    </Link>\r\n                  <h3 className=\"countries__name\">\r\n                    {name} \r\n                  </h3>\r\n                  <h3 className=\"countries__description\">\r\n                    Population: {population}\r\n                  </h3>\r\n                  <h3 className=\"countries__description\">Region: {region} </h3>\r\n                  <h3 className=\"countries__description\">Capital: {capital}</h3>\r\n\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CountryList;\r\n\r\n","// import './Country.css'\r\nimport { useParams } from \"react-router-dom\";\r\nimport Heading from \"../Heading/Heading\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Country = () => {\r\n \r\n\r\n\r\n  let { name } = useParams();\r\n  const [country, setCountry] = useState();\r\n  useEffect(() => {\r\n    axios.get(`https://restcountries.eu/rest/v2/name/${name}`).then((res) => {\r\n      const chosenCountry = res.data;\r\n      setCountry(chosenCountry);\r\n    });\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"country__wrapper\" >\r\n        {country &&\r\n          country.map((el) => {\r\n            const {\r\n              numericCode,\r\n              flag,\r\n              name,\r\n              nativeName,\r\n              population,\r\n              region,\r\n              subregion,\r\n              capital,\r\n              topLevelDomain,\r\n              currencies,\r\n              languages,\r\n              borders\r\n            } = el;\r\n            return (\r\n              <>\r\n                <Link to=\"/\">\r\n                  <button className=\"country__button\">Back</button>\r\n                </Link>\r\n                <div className=\"country__details\" key={numericCode}>\r\n                  <div className=\"country__flag\">\r\n                    <img src={flag} alt={name} />\r\n                  </div>\r\n                  \r\n                              <div className=\"country__title\">\r\n                              <h1 className=\"country__name\">{name}</h1>\r\n                              </div>\r\n                              <div className=\"country__columnleft\">\r\n                                    \r\n                                    <h3 className=\"country__details\">Native Name: {nativeName}</h3>\r\n                                    <h3 className=\"country__details\">Population: {population}</h3>\r\n                                    <h3 className=\"country__details\">Region: {region}</h3>\r\n                                    <h3 className=\"country__details\">Sub Region: {subregion}</h3>\r\n                              </div>\r\n                              <div className=\"country__columnright\">\r\n                                    <h3 className=\"country__details\">Capitol: {capital}</h3>\r\n                                    <h3 className=\"country__details\">Top Level Domain: {topLevelDomain}</h3>\r\n                                    <h3 className=\"country__details\">Currencies: {currencies[0].name}</h3>\r\n                                    <h3 className=\"country__details\">Languages: {languages[0].name} </h3>\r\n                              </div>\r\n                  \r\n\r\n                              <div className=\"country__bottom\">\r\n                                    <h3>Border Countries:</h3>\r\n                                    <div >\r\n                                      <ul className=\"country__borderlist\">\r\n                                        {borders.length > 0 ? borders.map((border)=>{\r\n                                          return(\r\n                                            <li className=\"country__border-elements\" key={border}>{border} </li>\r\n                                          )\r\n                                        }) : <li className=\"country__border-elements\">None</li>\r\n                                      } \r\n                                        </ul> \r\n                                  </div>   \r\n                            </div>\r\n                   \r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","import './main.scss'\nimport Heading from \"./Components/Heading/Heading\";\nimport Menu from \"./Components/Menu/Menu\";\nimport CountryList from \"./Components/CountryList/CountryList\"\nimport Country from \"./Components/Country/Country\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {useState} from 'react';\n\n\nfunction App() {\n\n  /* number of countries */\n  const [numberOfCountries, setNumberOfCountries] = useState();\n\n  /* zmienna do koloru */\n  const [isLightMode, setIsLightMode] = useState(true);\n  \n\n  /* zmienna do searcha */\n  const [filteredData, setFilteredData] = useState();\n  \n  /* zmienna do regionów */\nconst [regions, setRegions] = useState('All')\n\n// const [filteredCountries, setFilteredCountries] = useState([]);\n// const regionsHandler =()=> {\n//   switch(regions){\n//     case 'Africa':\n//       setFilteredCountries()\n//   }\n// }\n  return (\n    <div className={isLightMode ? \"app lightmode\" : \"app\"} >\n              \n              <Router>\n              <Heading\n                    isLightMode={isLightMode}\n                    setIsLightMode={setIsLightMode}\n                  />\n              <Switch>\n                <Route path=\"/country/:name\">\n                  <Country />\n                </Route>\n                <Route exact path=\"/\">\n                  \n                  <Menu\n                  filteredData={filteredData}\n                  setFilteredData={setFilteredData}\n                  regions={regions}\n                  setRegions={setRegions}\n                  numberOfCountries={numberOfCountries}\n                 \n                 \n                  />\n                  <CountryList \n                   filteredData={filteredData}\n                   numberOfCountries={numberOfCountries}\n                   setNumberOfCountries={setNumberOfCountries}\n                   regions={regions}\n                   setRegions={setRegions}\n                  />\n                 \n                  \n\n                    \n                    \n                </Route>\n              </Switch>\n            </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}